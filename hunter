#!/usr/bin/env python3

"""Hunt for sex-specific transcripts in male/female assemblies.

What are we looking for?

=> Is it full of SNPs (rather than a splice variant)?

BLAST back against male assembly

=> Is there a higher identity hit could be an X allele?
"""

import os
import fasta
import pandas as pd
from numpy import nan
from blast import blast
from blast.parse import BlastResult

import logging
import logging.config
logging.config.fileConfig('logging/log.conf')
logger = logging.getLogger('root')


# Sequences to use as BLAST queries
MSP_cds = fasta.read("data/sex_specific/MSP_cds.fas")
MSP_pep = fasta.read("data/sex_specific/MSP_pep.fas")
FSP_cds = fasta.read("data/sex_specific/FSP_cds.fas")
FSP_pep = fasta.read("data/sex_specific/FSP_pep.fas")

# Assemblies to BLAST against
male_hp_cds = "blast/db/hp_m_cds.fas"
female_hp_cds = "blast/db/hp_f_cds.fas"
male_hp_pep = "blast/db/hp_m_pep.fas"
female_hp_pep = "blast/db/hp_f_pep.fas"

# %% Generate BLAST alignments

outfiles = []

blast_combos = [
    ("blastp", MSP_pep, female_hp_pep),
    ("blastp", FSP_pep, male_hp_pep),
]

for alg, query, db in blast_combos:
    outfile = blast.blast(alg, query, db)
    outfiles.append(outfile)

# %% Filter alignments and CDS BLAST

mcds = pd.read_csv('MSP_cds.csv', index_col=0)
mpep = pd.read_csv('MSP_pep.csv', index_col=0)

# Filter out transcripts with no hits
mpep = mpep.loc[mpep['Identity_percent'] != nan]
# Filter to protein matches with reasonable but imperfect identity
mpep = mpep.loc[mpep['Identity_percent'] < 80].copy()
# Extract query:subject CDS sequences for these and pairwise BLAST them
mfas = fasta.read(male_hp_cds)
ffas = fasta.read(female_hp_cds)
mcds = {k: mfas[k] for k in mpep.index}
fcds = {k: ffas[k] for k in mpep.index}
cds_identities = []

for query, subject in zip(mcds, fcds):
    result = blast.pairwise_blast(query, subject)


# %% Write output

for outfile in outfiles:
    result = BlastResult(outfile)
    result.to_csv(os.path.basename(outfile).replace('.xml', '.csv'))
